<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Guts of Git</title><link>https://guts-of-git.carson-anderson.com/</link><description>Recent content in Introduction on Guts of Git</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://guts-of-git.carson-anderson.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Preamble</title><link>https://guts-of-git.carson-anderson.com/docs/workshop/preamble/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guts-of-git.carson-anderson.com/docs/workshop/preamble/</guid><description>Why Do We Use Git? (Or any VCS?) # Git is a tool we use. Before we even start diving into how it works we should understand what exactly it provides and why we use it
Just for code backup? # If that&amp;rsquo;s what you want. Just use &amp;lsquo;cp&amp;rsquo; - It&amp;rsquo;s faster, lighter, and simpler
Just to share code? # Again there are plenty of ways to share files without Git:</description></item><item><title>Git Fundamentals</title><link>https://guts-of-git.carson-anderson.com/docs/workshop/fundamentals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guts-of-git.carson-anderson.com/docs/workshop/fundamentals/</guid><description>Fundamentals # Let&amp;rsquo;s get started already! This page will walk you step by step through some very basic git commands. While the commands themselves may not be anything new or special to you, we will be diving into the guts of git and what each command is actually doing inside the repo.
Next Creating a New Repository # It&amp;rsquo;s time to start by making an empty Git repository. We do this by making a directory, changing into it, and using git init</description></item><item><title>Understanding Remotes</title><link>https://guts-of-git.carson-anderson.com/docs/workshop/branching/understanding-remotes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guts-of-git.carson-anderson.com/docs/workshop/branching/understanding-remotes/</guid><description>Understanding remotes # So, before we go about fixing our out of date branch, let&amp;rsquo;s talk a little about another fundamental git concept: remotes
A remote in git is sort of like a pointer, but rather than point to a specific file or commit. It points git itself to a place where a git repo is stored.
This is typically a remote server. Something serving git over https or ssh is fairly common.</description></item><item><title>Update With Merge</title><link>https://guts-of-git.carson-anderson.com/docs/workshop/branching/update-with-merge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guts-of-git.carson-anderson.com/docs/workshop/branching/update-with-merge/</guid><description>Update With Merge # This section builds on the previous Git Fundamentals section.
If you have not done that section you should still be able to do all the exercises here since each one starts with a script to get you to a known starting state.
Back Next Problem: Updating to the latest Main # This will cover a very common situation and help you understand two critical features of git and how they help you solve the problem.</description></item><item><title>Update With Rebase</title><link>https://guts-of-git.carson-anderson.com/docs/workshop/branching/update-with-rebase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://guts-of-git.carson-anderson.com/docs/workshop/branching/update-with-rebase/</guid><description>Update With Rebase # This section builds on the previous Git Fundamentals section.
If you have not done that section you should still be able to do all the exercises here since each one starts with a script to get you to a known starting state.
Back Next Problem: Updating to the latest Main # This will cover a very common situation and help you understand two critical features of git and how they help you solve the problem.</description></item></channel></rss>